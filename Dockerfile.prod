FROM public.ecr.aws/docker/library/node:lts-slim AS base
WORKDIR /usr/src/app

LABEL org.opencontainers.image.source="https://github.com/rubberdok/indok-api" \
    org.opencontainers.image.description="Container image for the Ind√∏k API." \
    org.opencontainers.image.licenses="MIT"

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# Required for Prisma
RUN apt-get update -y \
    && apt-get install -y openssl \
    && apt-get clean

FROM base AS prod-deps
ENV NODE_ENV production

COPY package.json pnpm-lock.yaml ./
COPY patches/ ./patches
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile

FROM prod-deps AS prisma
COPY prisma/ ./prisma
RUN pnpm generate:prisma

FROM base AS dev-deps
COPY package.json pnpm-lock.yaml ./
COPY patches/ ./patches
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

FROM dev-deps AS graphql
COPY src/graphql ./src/graphql
COPY codegen.production.config.ts tsconfig.json ./

RUN pnpm generate-gql-production

FROM dev-deps AS build

COPY .swcrc tsconfig.json ./
COPY certs/ ./certs
COPY scripts/ ./scripts
COPY src/ ./src
COPY --from=graphql /usr/src/app/src/graphql/resolvers.generated.ts ./src/graphql/resolvers.generated.ts
RUN pnpm build:production

FROM base AS runner

ENV NODE_ENV production

COPY --chown=node:node --from=build /usr/src/app/certs /etc/ssl/certs
COPY --chown=node:node --from=build /usr/src/app/scripts ./scripts
COPY --chown=node:node --from=prisma /usr/src/app/prisma ./prisma
COPY --chown=node:node --from=build /usr/src/app/package.json ./package.json
COPY --chown=node:node --from=prisma /usr/src/app/node_modules ./node_modules
COPY --chown=node:node --from=build /usr/src/app/dist ./dist

USER node

CMD [ "node", "./dist/server.js" ]
