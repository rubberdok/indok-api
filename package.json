{
	"name": "@rubberdok/api",
	"version": "1.0.0",
	"description": "API for https://indokntnu.no, the website for the student organizations at Industrial Economics and Technology Management, NTNU.",
	"repository": "https://github.com/rubberdok/indok-api",
	"author": "RubberdÃ¸k NTNU",
	"license": "MIT",
	"private": true,
	"type": "module",
	"packageManager": "pnpm@9.4.0",
	"files": ["dist", "certs", "scripts"],
	"engines": {
		"node": ">=20",
		"pnpm": ">=9"
	},
	"scripts": {
		"setup": "run-p generate",
		"start:production": "node --import ./dist/instrument.js ./dist/server.js",
		"build:production": "run-s generate:gql swc",
		"build": "pnpm run swc",
		"studio": "prisma studio",
		"db:migrate:dev": "dotenv -e .env.development -- prisma migrate dev",
		"db:migrate:status": "prisma migrate status",
		"db:migrate": "prisma migrate deploy",
		"db:push": "dotenv -e .env.development -- prisma db push",
		"db:seed": "dotenv -e .env.development -- node --import @swc-node/register/esm-register  src/repositories/seed.ts",
		"dev": "run-s docker:up 'start-dev {@}' --",
		"start-dev": "concurrently --restart-tries 3 --kill-signal -c cyan.bold,cyan.dim,magenta.dim,black.dim pnpm:watch-*",
		"watch-server": "MODE=development node --enable-source-maps --import @swc-node/register/esm-register --watch ./src/server.ts | pino-pretty",
		"watch-worker": "MODE=worker.development node --enable-source-maps --import @swc-node/register/esm-register --watch ./src/worker.ts | pino-pretty",
		"watch-gql": "pnpm generate:gql --watch",
		"watch-prisma": "pnpm generate:prisma --watch",
		"docker:up": "docker compose up postgres redis -d && wait-on tcp:5433 -t 20000",
		"docker:down": "docker compose down",
		"generate:gql": "NODE_OPTIONS='-r @swc-node/register' graphql-codegen-esm -c codegen.config.ts",
		"generate:prisma": "prisma generate --no-hints",
		"generate": "run-p generate:*",
		"integration-test": "dotenv -e .env.test -- pnpm db:push && dotenv -e .env.test -- pnpm jest --config jest.integration.config.cjs",
		"format": "biome format .",
		"format:write": "biome format --write .",
		"lint": "biome check .",
		"lint:apply": "biome check --apply .",
		"lint:ci": "biome ci .",
		"setup-integration-test": "run-s docker:up",
		"swc": "swc src -d dist --strip-leading-paths",
		"test:integration:ci": "run-s setup 'integration-test {@}' -- --reporters='jest-junit' --reporters='default' --collect-coverage",
		"test:integration": "run-s docker:up 'integration-test {@}' --",
		"test": "dotenv -e .env.test -- pnpm jest",
		"test:all": "run-s docker:up 'test-all {@}' --",
		"test-all": "dotenv -e .env.test --  pnpm jest --test-match \"**/!(dev).test.ts\"",
		"test:ci": "pnpm run setup && dotenv -e .env.test --  pnpm jest --reporters='jest-junit' --reporters='default' --collect-coverage",
		"test:dev": "NODE_ENV=production pnpm jest --reporters='jest-junit' --reporters='default' --config jest.dev.config.cjs",
		"jest": "node --experimental-vm-modules --no-warnings=ExperimentalWarning ./node_modules/jest/bin/jest.js",
		"tsc": "tsc",
		"tsc:ci": "run-s setup tsc",
		"check": "run-s setup tsc lint test",
		"clean-dist": "rm -rf dist"
	},
	"devDependencies": {
		"@biomejs/biome": "1.8.3",
		"@eddeee888/gcg-typescript-resolver-files": "^0.10.1",
		"@faker-js/faker": "^8.4.1",
		"@graphql-codegen/add": "^5.0.3",
		"@graphql-codegen/cli": "^5.0.2",
		"@graphql-codegen/client-preset": "^4.3.2",
		"@graphql-codegen/schema-ast": "^4.1.0",
		"@graphql-typed-document-node/core": "^3.2.0",
		"@jest/globals": "^29.7.0",
		"@parcel/watcher": "^2.4.1",
		"@swc-node/register": "1.10.0",
		"@swc/cli": "^0.4.0",
		"@swc/core": "1.6.6",
		"@swc/helpers": "^0.5.11",
		"@swc/jest": "^0.2.36",
		"@types/connect-redis": "^0.0.23",
		"@types/jest": "^29.5.12",
		"@types/lodash-es": "^4.17.12",
		"@types/luxon": "^3.4.2",
		"@types/node": "^20.14.9",
		"concurrently": "^8.2.2",
		"dotenv-cli": "^7.4.2",
		"execa": "^9.3.0",
		"jest": "^29.7.0",
		"jest-junit": "^16.0.0",
		"jest-mock-extended": "^3.0.6",
		"npm-run-all2": "^6.2.0",
		"pino-pretty": "^11.2.1",
		"typescript": "^5.5.3",
		"wait-on": "^7.2.0"
	},
	"dependencies": {
		"@apollo/server": "^4.10.4",
		"@as-integrations/fastify": "^2.1.1",
		"@azure/identity": "^4.3.0",
		"@azure/storage-blob": "^12.23.0",
		"@bull-board/api": "^5.20.5",
		"@bull-board/fastify": "^5.20.5",
		"@fastify/cookie": "^9.3.1",
		"@fastify/cors": "^9.0.1",
		"@fastify/helmet": "^11.1.1",
		"@fastify/rate-limit": "^9.1.0",
		"@fastify/redis": "^6.1.1",
		"@fastify/session": "^10.9.0",
		"@fastify/under-pressure": "^8.5.0",
		"@opentelemetry/exporter-trace-otlp-http": "^0.52.1",
		"@opentelemetry/instrumentation": "^0.52.1",
		"@opentelemetry/resources": "^1.25.1",
		"@opentelemetry/sdk-trace-base": "^1.25.1",
		"@opentelemetry/sdk-trace-node": "^1.25.1",
		"@opentelemetry/semantic-conventions": "^1.25.1",
		"@prisma/client": "^5.16.1",
		"@prisma/instrumentation": "^5.16.1",
		"@sentry/node": "^8.13.0",
		"@vippsmobilepay/sdk": "^1.3.1",
		"bullmq": "^5.8.3",
		"connect-redis": "^7.1.1",
		"dotenv": "^16.4.5",
		"fastify": "^4.28.1",
		"fastify-plugin": "^4.5.1",
		"graphql": "^16.9.0",
		"graphql-scalars": "^1.23.0",
		"graphql-tag": "^2.12.6",
		"import-in-the-middle": "1.8.1",
		"ioredis": "^5.4.1",
		"lodash-es": "^4.17.21",
		"luxon": "^3.4.4",
		"openid-client": "^5.6.5",
		"pino": "^9.2.0",
		"postmark": "^4.0.4",
		"prisma": "^5.16.1",
		"yargs": "^17.7.2",
		"zod": "^3.23.8"
	},
	"pnpm": {
		"supportedArchitectures": {
			"os": ["current", "linux"],
			"cpu": ["current", "x64"],
			"libc": ["current", "glibc"]
		},
		"overrides": {
			"import-in-the-middle": "1.8.1"
		},
		"patchedDependencies": {
			"import-in-the-middle@1.8.1": "patches/import-in-the-middle@1.8.1.patch"
		}
	}
}
