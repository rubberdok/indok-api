// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "debian-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_CONNECTION_STRING")
}

model GoogleDocument {
  id        String  @id @default(uuid())
  identifer String  @unique
  favorite  Boolean @default(false)
}

model User {
  id                      String    @id @default(uuid())
  feideId                 String    @unique
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  lastLogin               DateTime  @default(now())
  firstLogin              Boolean   @default(true)
  firstName               String
  lastName                String
  email                   String    @unique
  username                String    @unique
  graduationYear          Int?
  graduationYearUpdatedAt DateTime?
  allergies               String?
  phoneNumber             String?
  isSuperUser             Boolean   @default(false)
}

model Organization {
  id    String  @id @default(uuid())
  name  String  @unique
  Event Event[]
}

model Event {
  id             String       @id @default(uuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  name           String
  description    String?
  startAt        DateTime
  endAt          DateTime
  location       String?
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}

model Role {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  name      String   @unique
  userId    String?
}

// Cabins
enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  REJECTED
}

model Cabin {
  id            String @id @default(uuid())
  name          String @unique
  internalPrice Int
  externalPrice Int
  capacity      Int
}

model Booking {
  id          String        @id @default(uuid())
  email       String
  phoneNumber String
  firstName   String
  lastName    String
  cabinId     String
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  status      BookingStatus @default(PENDING)
}
