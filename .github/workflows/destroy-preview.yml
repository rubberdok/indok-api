# Removes all resources that were created for the preview environment through the `preview.yml` workflow.
# Runs whenever a PR is closed, i.e. when the PR is merged or closed without merging.

name: "Destroy Preview"

# Run every 5 minutes
on:
  schedule:
    - cron: "*/5 * * * *"

defaults:
  run:
    working-directory: ./infrastructure/resources

jobs:
  identify-issues:
    name: Identify Issues
    runs-on: ubuntu-latest
    outputs:
      issues: ${{ steps.issues.outputs.issues }}

    steps:
      - uses: actions/github-script@v6
        id: find-pr-previews
        with:
          result-encoding: string
          retries: 3
          script: |
            github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: "preview"
            })

      - name: Set output
        id: issues
        run: |
          echo "::set-output name=issues::${{ steps.find-pr-previews.outputs.result }}"

  terraform:
    needs: [identify-issues]

    strategy:
      matrix:
        pr-number: ${{ fromJSON(needs.identify-issues.outputs.issues) }}

    name: Clean up Terraform
    runs-on: ubuntu-latest

    env:
      # We authenticate to Azure using service principal with Open ID Connect (OIDC)
      # as outlined in https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/service_principal_oidc
      # `ARM_CLIENT_ID`, `ARM_SUBSCRIPTION_ID`, and `ARM_TENANT_ID` are all required for this authentication method.
      # They belong to the `indok_web` app registration in Azure AD.
      ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}

      # Needed for the `github` provider to have the necessary permissions to create GH environments.
      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    permissions:
      # `id-token: write` permission is needed for OIDC authentication to Azure.
      id-token: write
      # `actions: write` permission is needed to create new environments in GH and add environment variables.
      actions: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ matrix.pr-number }}/head

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Select Terraform Workspace
        id: workspace
        run: terraform workspace select preview-pr-${{ matrix.pr-number }}

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var-file="vars/default.tfvars" -var-file="vars/vars/test.tfvars" -var docker_registry_password="${{ env.GITHUB_TOKEN }}"

      - name: Destroy Workspace
        run: |
          terraform workspace select default
          terraform workspace delete preview-pr-${{ matrix.pr-number }}

      - name: Remove Label
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ matrix.pr-number }},
              name: "preview"
            })
