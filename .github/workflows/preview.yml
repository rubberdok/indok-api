# Provisions a preview environment for each pull request identical to the production environnment.
# All resources that are created here are removed when the PR is closed by the `destroy-preview.yml` workflow.

name: "Preview Environment"

on:
  issue_comment:
    types: [created]

defaults:
  run:
    working-directory: ./infrastructure

permissions: write-all

# Ensure that only one workflow related to provisioning infrastructure for a given PR is running at a time.
# Otherwise, we might encounter locks on the state files imposed by Terraform, and it is generally a bad idea to
# try to create a database while we're simultaneously trying to delete it. :)
concurrency:
  group: preview-${{ github.event.issue.number }}
  cancel-in-progress: false

jobs:
  terraform:
    if: ${{ github.event.issue.pull_request }} && contains(github.event.comment.body, '/preview')

    name: Preview Environment
    runs-on: ubuntu-latest

    env:
      # We authenticate to Azure using service principal with Open ID Connect (OIDC)
      # as outlined in https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/service_principal_oidc
      # `ARM_CLIENT_ID`, `ARM_SUBSCRIPTION_ID`, and `ARM_TENANT_ID` are all required for this authentication method.
      # They belong to the `indok_web` app registration in Azure AD.
      ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}

      # Needed for the `github` provider to have the necessary permissions to create GH environments.
      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    steps:
      - name: Checkout pull request üèÅ
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Find Existing Comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-author: "github-actions[bot]"
          body-includes: "### Deploying Preview Environment"

      - name: Update Pull Request
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.issue.number }}
          edit-mode: replace
          body: |
            #### Deploying Preview Environment

            Preview environment is being deployed.

            *Pushed by: @${{ github.actor }}, Action: `${{ github.event_name }}`*

      - name: Thumbs Up
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: |
            +1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Select Terraform Workspace
        id: workspace
        run: terraform workspace select -or-create preview-pr-${{ github.event.issue.number }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file="test.tfvars"

      - name: Update Pull Request
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.issue.number }}
          edit-mode: replace
          body: |
            #### Preview Environment

            Preview Environment is deployed at .... 

            *Pushed by: @${{ github.actor }}, Action: `${{ github.event_name }}`*

      - name: Add Preview Label
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["preview"]
            })
