# Provisions a preview environment for each pull request identical to the production environnment.
# All resources that are created here are removed when the PR is closed by the `destroy-preview.yml` workflow.

name: "Preview Environment"

on:
  pull_request:

defaults:
  run:
    working-directory: ./infrastructure

# Ensure that only one workflow related to provisioning infrastructure for a given PR is running at a time.
# Otherwise, we might encounter locks on the state files imposed by Terraform, and it is generally a bad idea to
# try to create a database while we're simultaneously trying to delete it. :)
concurrency:
  group: preview-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  terraform:
    name: Preview Environment
    runs-on: ubuntu-latest

    env:
      # We authenticate to Azure using service principal with Open ID Connect (OIDC)
      # as outlined in https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/service_principal_oidc
      # `ARM_CLIENT_ID`, `ARM_SUBSCRIPTION_ID`, and `ARM_TENANT_ID` are all required for this authentication method.
      # They belong to the `indok_web` app registration in Azure AD.
      ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}

      # Needed for the `github` provider to have the necessary permissions to create GH environments.
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    permissions:
      # `id-token: write` permission is needed for OIDC authentication to Azure.
      id-token: write
      # `actions: write` permission is needed to create new environments in GH and add environment variables.
      actions: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Select Terraform Workspace
        id: workspace
        run: terraform workspace select -or-create preview-pr-${{ github.event.pull_request.number }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -var-file="test.tfvars"
        continue-on-error: false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file="test.tfvars"
